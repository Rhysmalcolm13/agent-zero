[
  {
    "id": "1",
    "name": "Initialize Task",
    "url": "",
    "navigation_goal": "Set up the main task environment.",
    "data_extraction_goal": "Gather necessary resources and initial data.",
    "advanced_settings": {}
  },
  {
    "id": "2",
    "name": "Search Memories",
    "url": "",
    "navigation_goal": "Retrieve relevant information from memory.",
    "data_extraction_goal": "Use knowledge_tool to fetch relevant memories.",
    "advanced_settings": {}
  },
  {
    "id": "3",
    "name": "Search Online",
    "url": "",
    "navigation_goal": "Gather information from online sources.",
    "data_extraction_goal": "Use knowledge_tool to perform online searches.",
    "advanced_settings": {}
  },
  {
    "id": "4",
    "name": "Generate Subtasks",
    "url": "",
    "navigation_goal": "Break down the main task into smaller subtasks.",
    "data_extraction_goal": "Analyze the main task to create manageable subtasks.",
    "advanced_settings": {}
  },
  {
    "id": "5",
    "name": "Delegate Subtasks",
    "url": "",
    "navigation_goal": "Assign subtasks to appropriate agents.",
    "data_extraction_goal": "Use call_subordinate tool to delegate tasks based on roles.",
    "advanced_settings": {}
  },
  {
    "id": "6",
    "name": "Aggregate Results",
    "url": "",
    "navigation_goal": "Combine results from all subordinate agents.",
    "data_extraction_goal": "Collect and merge outputs from delegated subtasks.",
    "advanced_settings": {}
  },
  {
    "id": "7",
    "name": "Verify and Finalize",
    "url": "",
    "navigation_goal": "Ensure the accuracy of results and complete the task.",
    "data_extraction_goal": "Use available tools to verify results and provide final response.",
    "advanced_settings": {}
  },
  {
    "id": "8",
    "name": "PDF Downloader Tool",
    "url": "https://example.com/pdf-downloader",
    "navigation_goal": "Download PDF files from specified URLs.",
    "data_extraction_goal": "Utilize the requests library to download and save PDF files.",
    "advanced_settings": {
      "code": "import requests\n\n# List of research paper URLs\nurls = [\n    'https://arxiv.org/pdf/2401.03568.pdf',\n    'https://arxiv.org/pdf/2408.08435.pdf',\n    'https://arxiv.org/pdf/2407.01502.pdf',\n    'https://arxiv.org/pdf/2402.05929.pdf',\n    'https://arxiv.org/pdf/2409.03215.pdf',\n    'https://arxiv.org/pdf/2404.11584.pdf',\n    'https://arxiv.org/pdf/2407.01502.pdf',\n    'https://arxiv.org/pdf/2409.10568.pdf',\n    'https://ar5iv.labs.arxiv.org/html/2308.10848.pdf',\n    'https://arxiv.org/pdf/2404.11584.pdf'\n]\n\ndef download_pdf(url):\n    response = requests.get(url)\n    if response.status_code == 200:\n        filename = url.split('/')[-1]\n        with open(filename, 'wb') as f:\n            f.write(response.content)\n        return f'{filename} downloaded successfully.'\n    else:\n        return f'Failed to download {url}'\n\nresults = [download_pdf(url) for url in urls]\nresults"
    }
  }
]